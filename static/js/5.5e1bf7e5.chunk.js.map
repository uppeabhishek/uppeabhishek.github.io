{"version":3,"sources":["components/projects/styles.ts","components/projects/projectsarray.tsx","static/dummyImage.svg","components/Button/styles.ts","components/Button/index.tsx","components/projects/projectDescription.tsx"],"names":["Styles","styled","div","props","theme","primaryColor","ProjectStyles","ProjectDescriptionStyles","projects","Javascript","image","dummyImage","name","displayName","technologies","allImages","description","demoURL","github","type","Python","ReactJS","ProjectsArray","res","Object","values","forEach","project","concat","history","useHistory","goToProject","e","push","currentTarget","dataset","className","map","key","data-name","data-type","onClick","style","backgroundImage","module","exports","button","Button","children","rest","ProjectDescription","useParams","settings","dots","infinite","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","pauseOnHover","currentProject","filter","ele","goBack","href","rel","target","dangerouslySetInnerHTML","__html","index","alt","height","src"],"mappings":"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","file":"static/js/5.5e1bf7e5.chunk.js","sourcesContent":["import styled from \"styled-components/macro\";\n\nexport const Styles = styled.div`\n    flex: 1;\n    max-width: 70%;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    padding: 40px 15% 0 15%;\n\n    .filters {\n        justify-content: space-between;\n        margin-bottom: 40px;\n\n        .each-filter {\n            width: 100%;\n            height: 40px;\n            border: 1px solid transparant;\n            border-radius: 4px;\n            padding: 5px 10px;\n            font-size: 16px;\n            cursor: pointer;\n        }\n\n        .each-filter.active {\n            color: white;\n            background-color: ${(props) => props.theme.primaryColor};\n        }\n    }\n`;\n\nexport const ProjectStyles = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n\n    .project {\n        transform: rotateY(0deg);\n        transform-style: preserve-3d;\n        transition-property: transform;\n        transition-duration: 1s;\n        cursor: pointer;\n        height: 200px;\n        border: 1px solid grey;\n        flex: 1 0 33%;\n\n        .img {\n            width: 100%;\n            height: 100%;\n            background-repeat: no-repeat;\n            background-size: 100% 100%;\n        }\n    }\n\n    .project:hover {\n        opacity: 0.7;\n    }\n`;\n\nexport const ProjectDescriptionStyles = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 10px;\n\n    .goback {\n        width: 100px;\n        left: 10px;\n    }\n\n    .main {\n        .header {\n            margin-bottom: 50px;\n            justify-content: space-between;\n\n            .title {\n                font-size: 3rem;    \n            }\n\n            .project-links {\n                display: flex;\n                justify-content: space-between;\n\n                a:not(:last-child) { \n                    margin-right: 10px;\n                } \n            }\n        }\n\n        .technologies {\n            display: flex;\n\n            .description {\n                font-size: 20px;\n                width: 40%;\n\n                li {\n                    margin-bottom: 15px;\n                }\n            }\n\n            .slider {\n                width: 60%\n            }\n\n            @media only screen and (max-width: 600px) {\n                display: block;\n\n                .description {\n                    width: 100%;\n                }\n    \n                .slider {\n                    width: 100%\n                }\n            }\n        }\n\n        a {\n            cursor: pointer;\n        }\n    }\n`;\n","import React, { FunctionComponent, SyntheticEvent } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProjectStyles } from \"./styles\";\n\n// @ts-ignore\nimport dummyImage from \"../../static/dummyImage.svg\";\n\ninterface ProjectInterface {\n    name: string;\n    displayName: string;\n    technologies: Array<string>;\n    type: string;\n    image: string;\n    allImages: Array<string>;\n    demoURL?: string;\n    github?: string;\n}\n\nexport const projects = {\n    Javascript: [\n        {\n            image: dummyImage,\n            name: \"memory-game\",\n            displayName: \"Memory Game\",\n            technologies: [\"Javascript\"],\n            allImages: [dummyImage, dummyImage],\n            description:\n                \"This is a simple memory game written in vanilla javascript. Here the user should match all the cards in the group of 2 to win the game.\",\n            demoURL: \"https://uppeabhishek.github.io/memory-game/\",\n            github: \"https://github.com/uppeabhishek/memory-game/\",\n            type: \"Javascript\"\n        }\n    ],\n    Python: [\n        {\n            image: dummyImage,\n            name: \"ds-algo\",\n            displayName: \"Data Structures and Algorithms\",\n            technologies: [\"Python\"],\n            description:\n                \"In this projects I have implemented various data structures and algorithms in python.\",\n            allImages: [dummyImage, dummyImage],\n            github: \"https://github.com/uppeabhishek/Data-Structures-and-Algorithms\",\n            type: \"Python\"\n        }\n    ],\n    ReactJS: [\n        {\n            image: dummyImage,\n            name: \"sorting-visualizer\",\n            displayName: \"Sorting Visualizer\",\n            technologies: [\"React JS\"],\n            description:\n                `<div>\n                    <div style=\"font-weight: bold\">\n                        Features\n                    </div>\n                    <ul>\n                        <li>\n                            Users can manually select a algorithm from the given list of algorithms.\n                        </li>\n                        <li>\n                            We can even add custom data and visualize the respective alogorithm.\n                        </li>\n                        <li>\n                            We can intialize the array either in increasing, decreasing, random (or) almost sorted manner.\n                        </li>\n                    </ul>\n                </div>`,\n            allImages: [dummyImage, dummyImage, dummyImage],\n            demoURL: \"https://uppeabhishek.github.io/sorting-visualizer/\",\n            github: \"https://github.com/uppeabhishek/sorting-visualizer/\",\n            type: \"ReactJS\"\n        }\n    ]\n};\n\nconst ProjectsArray: FunctionComponent<{ name: string }> = ({ name }) => {\n    let res: Array<ProjectInterface> = [];\n\n    if (name === \"All\") {\n        Object.values(projects).forEach((project) => {\n            res = res.concat(project);\n        });\n    }\n\n    // Change this way of comparing\n    else if (name === \"ReactJS\" || name === \"Javascript\" || name === \"Python\") {\n        res = res.concat(projects[name]);\n    }\n\n    const history = useHistory();\n\n    const goToProject = (e: SyntheticEvent<HTMLDivElement>) => {\n        history.push(`/projects/${e.currentTarget.dataset.type}/${e.currentTarget.dataset.name}`);\n    };\n\n    return (\n        <ProjectStyles className=\"projects\">\n            {res.map((project) => (\n                <div\n                    key={project.name}\n                    className=\"project center-items\"\n                    data-name={project.name}\n                    data-type={project.type}\n                    onClick={goToProject}\n                >\n                    <div className=\"img\" style={{ backgroundImage: `url(${project.image})` }} />\n                    <div className=\"description\">{project.displayName}</div>\n                </div>\n            ))}\n        </ProjectStyles>\n    );\n};\n\nexport default ProjectsArray;\n","module.exports = __webpack_public_path__ + \"static/media/dummyImage.0822b25f.svg\";","import styled from \"styled-components/macro\";\n\nexport const Styles = styled.button`\n    background-color: white;\n    border: 1px solid ${(props) => props.theme.primaryColor};\n    color: ${(props) => props.theme.primaryColor};\n    cursor: pointer;\n    height: 40px;\n    padding: 10px;\n\n    :hover {\n        color: white;\n        background-color: ${(props) => props.theme.primaryColor};\n    }\n`;\n","import React, { FunctionComponent, ReactNode } from \"react\";\nimport { Styles } from \"./styles\";\n\ninterface ButtonType {\n    children: ReactNode;\n    [prop: string]: any;\n}\nexport const Button: FunctionComponent<ButtonType> = ({ children, ...rest }) => (\n    <Styles type=\"button\" {...rest}>\n        {children}\n    </Styles>\n);\n","import React, { FunctionComponent } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport { Button } from \"../Button\";\nimport { ProjectDescriptionStyles } from \"./styles\";\nimport { projects } from \"./projectsarray\";\n\nconst ProjectDescription: FunctionComponent = () => {\n    const { name, type } = useParams();\n    const history = useHistory();\n\n    const settings = {\n        dots: true,\n        infinite: true,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplay: true,\n        autoplaySpeed: 3000,\n        pauseOnHover: true\n    };\n\n    const goBack = () => {\n        history.goBack();\n    };\n\n    // @ts-ignore\n    const currentProject = projects[type].filter((ele) => ele.name === name);\n\n    return (\n        <ProjectDescriptionStyles>\n            <div className=\"main\">\n                <div className=\"header d-flex\">\n                    <Button className=\"goback\" onClick={goBack}>\n                        Go Back\n                    </Button>\n                    <div className=\"title\">{currentProject[0].displayName}</div>\n                    <div className=\"project-links\">\n                        {currentProject[0].demoURL ? (\n                            <a\n                                href={currentProject[0].demoURL}\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <Button className=\"demo\">Demo URL</Button>\n                            </a>\n                        ) : (\n                            \"\"\n                        )}\n                        {currentProject[0].github ? (\n                            <a\n                                href={currentProject[0].github}\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <Button className=\"github\">View on github</Button>\n                            </a>\n                        ) : (\n                            \"\"\n                        )}\n                    </div>\n                </div>\n                <div className=\"technologies\">\n                    <div className=\"description\">\n                        <div dangerouslySetInnerHTML={{__html: currentProject[0].description}} />\n                    </div>\n                    <div className=\"slider\">\n                        <Slider {...settings}>\n                            {currentProject[0].allImages.map((image: string, index: number) => {\n                                return <img key={index} alt=\"project\" height={400} src={image} />;\n                            })}\n                        </Slider>\n                    </div>\n                </div>\n            </div>\n        </ProjectDescriptionStyles>\n    );\n};\n\nexport default ProjectDescription;\n"],"sourceRoot":""}