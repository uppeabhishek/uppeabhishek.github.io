{"version":3,"sources":["static/dummyImage.svg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/projects/styles.ts","components/projects/projectsarray.tsx","components/projects/index.tsx"],"names":["module","exports","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","Styles","styled","div","props","theme","primaryColor","ProjectStyles","projects","Javascript","image","dummyImage","displayName","technology","type","Python","ReactJS","ProjectsArray","res","values","forEach","project","concat","history","useHistory","goToProject","e","currentTarget","dataset","className","map","key","data-name","onClick","style","backgroundImage","Projects","technologies","useRef","useState","current","selected","toggleSelected","role","onKeyDown","handleClick"],"mappings":"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","file":"static/js/5.3f4b4e10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dummyImage.0822b25f.svg\";","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from \"styled-components/macro\";\n\nexport const Styles = styled.div`\n    flex: 1;\n    max-width: 70%;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    padding: 40px 15% 0 15%;\n\n    .filters {\n        justify-content: space-between;\n        margin-bottom: 40px;\n\n        .each-filter {\n            width: 100%;\n            height: 40px;\n            border: 1px solid transparant;\n            border-radius: 4px;\n            padding: 5px 10px;\n            font-size: 16px;\n            cursor: pointer;\n        }\n\n        .each-filter.active {\n            color: white;\n            background-color: ${(props) => props.theme.primaryColor};\n        }\n    }\n`;\n\nexport const ProjectStyles = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n\n    .project {\n        transform: rotateY(0deg);\n        transform-style: preserve-3d;\n        transition-property: transform;\n        transition-duration: 1s;\n        cursor: pointer;\n        height: 200px;\n        border: 1px solid grey;\n        flex: 1 0 33%;\n\n        .img {\n            width: 100%;\n            height: 100%;\n            background-repeat: no-repeat;\n            background-size: 100% 100%;\n        }\n    }\n\n    .project:hover {\n        opacity: 0.7;\n    }\n`;\n","import React, { FunctionComponent, SyntheticEvent } from \"react\";\nimport { ProjectStyles } from \"./styles\";\nimport dummyImage from \"../../static/dummyImage.svg\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface ProjectInterface {\n    name: string;\n    displayName: string;\n    technology: string;\n    type: string;\n    image: string;\n    github?: string;\n}\n\nconst projects = {\n    Javascript: [\n        {\n            image: dummyImage,\n            name: \"memory-game\",\n            displayName: \"Memory Game\",\n            technology: \"Javascript\",\n            type: \"Javascript\"\n        }\n    ],\n    Python: [\n        {\n            image: dummyImage,\n            name: \"ds-algo\",\n            displayName: \"Data Structures and Algorithms\",\n            technology: \"Python\",\n            type: \"Python\"\n        }\n    ],\n    ReactJS: [\n        {\n            image: dummyImage,\n            name: \"sorting-visualizer\",\n            displayName: \"Sorting Visualizer\",\n            technology: \"React JS / Python\",\n            type: \"ReactJS\"\n        }\n    ]\n};\n\nconst ProjectsArray: FunctionComponent<{ name: string }> = ({ name }) => {\n    let res: Array<ProjectInterface> = [];\n\n    if (name === \"All\") {\n        Object.values(projects).forEach((project) => {\n            res = res.concat(project);\n        });\n    }\n\n    // Change this way of comparing\n    else if (name === \"ReactJS\" || name === \"Javascript\" || name === \"Python\") {\n        res = res.concat(projects[name]);\n    }\n\n    const history = useHistory();\n\n    const goToProject = (e: SyntheticEvent<HTMLDivElement>) => {\n        history.push(`/projects/${e.currentTarget.dataset.name}/`);\n    }\n\n    return (\n        <ProjectStyles className=\"projects\">\n            {res.map((project) => (\n                <div key={project.name} className=\"project center-items\" data-name={project.name} onClick={goToProject}>\n                    <div className=\"img\" style={{ backgroundImage: `url(${project.image})` }} />\n                    <div className=\"description\">{project.displayName}</div>\n                </div>\n            ))}\n        </ProjectStyles>\n    );\n};\n\nexport default ProjectsArray;\n","import React, { FunctionComponent, useRef, useState, useEffect } from \"react\";\nimport { Styles } from \"./styles\";\nimport ProjectsArray from \"./projectsarray\";\n\nconst Projects: FunctionComponent = () => {\n    const technologies = useRef([\"All\", \"ReactJS\", \"Javascript\", \"Python\"]);\n    const [selected, toggleSelected] = useState(technologies.current[0]);\n\n    const handleClick = (e: KeyboardEvent, technology: string) => {\n        if (e.key === \"Enter\") {\n            toggleSelected(technology);\n        }\n    };\n\n    return (\n        <Styles>\n            <div className=\"filters d-flex\">\n                {technologies.current.map((technology: string) => {\n                    const className = technology === selected ? \"active\" : \"\";\n                    return (\n                        <div\n                            key={technology}\n                            className={`center-items each-filter ${className}`}\n                            role=\"img\"\n                            onClick={() => {\n                                toggleSelected(technology);\n                            }}\n                            // @ts-ignore\n                            onKeyDown={(e) => handleClick(e, technology)}\n                        >\n                            {technology}\n                        </div>\n                    );\n                })}\n            </div>\n            <ProjectsArray name={selected} />\n        </Styles>\n    );\n};\n\nexport default Projects;\n"],"sourceRoot":""}